:root {
  --demo-grid-gap: 24px;
}
@media (min-width: 992px) {
  :root {
    --demo-grid-gap: 40px;
  }
}

:root {
  --demo-width-xxlarge: 1920px;
  --demo-width-xlarge: 1440px;
  --demo-width-large: 1280px;
  --demo-width-medium: 960px;
  --demo-width-small: 768px;
  --demo-width-xsmall: 640px;
  --demo-width-xxsmall: 480px;
}

:root {
  --demo-zindex-super: 100;
  --demo-zindex-top: 90;
  --demo-zindex-over: 10;
  --demo-zindex-default: 1;
  --demo-zindex-under: -1;
  --demo-zindex-bottom: -9999px;
}

.align-left {
  margin: 0 24px 24px 0;
  margin: 0 var(--demo-grid-gap) var(--demo-grid-gap) 0;
}

.align-right {
  margin: 0 0 24px 24px;
  margin: 0 0 var(--demo-grid-gap) var(--demo-grid-gap);
}

.align-center {
  margin: 24px auto;
  margin: var(--demo-grid-gap) auto;
}

[class*=l-flex] > * {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  margin: calc(24px / 2 * -1) calc(24px / 2 * -1);
  margin: calc(var(--demo-grid-gap) / 2 * -1) calc(var(--demo-grid-gap) / 2 * -1);
}

[class*=l-flex] > * > * {
  margin: calc(24px / 2) calc(24px / 2);
  margin: calc(var(--demo-grid-gap) / 2) calc(var(--demo-grid-gap) / 2);
}

.l-flex__alignment--start > * {
  justify-content: flex-start;
}

.l-flex__alignment--center > * {
  justify-content: center;
}

.l-flex__alignment--end > * {
  justify-content: flex-end;
}

.l-flex__alignment--end > * {
  justify-content: flex-end;
}

.l-flex__no-wrap > * {
  flex-wrap: nowrap;
}

[class*=l-constrained] {
  margin-left: auto;
  margin-right: auto;
  max-width: 1440px;
  max-width: var(--demo-width-xlarge);
  width: 100%;
}

[class*=l-constrained] [class*=l-constrained] {
  margin-left: 0;
  margin-right: 0;
}

.l-constrained {
  max-width: 1440px;
  max-width: var(--demo-width-xlarge);
}

.l-constrained__width--narrow {
  max-width: 960px;
  max-width: var(--demo-width-medium);
}

.l-constrained__width--wide {
  max-width: 1920px;
  max-width: var(--demo-width-xxlarge);
}

.l-constrained__width--full {
  width: 100%;
}

@media (min-width: 769px) {
  .l-grid .l-grid__inner {
    display: flex;
    flex-flow: nowrap row;
    margin: 0 -var(--demo-grid-gap);
  }
}
.l-grid .l-grid__inner > * + * {
  margin-top: 24px;
  margin-top: var(--demo-grid-gap);
}
.l-grid .l-grid__inner .l-grid__item {
  flex-shrink: 0;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item {
    padding: 0 24px;
    padding: 0 var(--demo-grid-gap);
  }
}
.l-grid .l-grid__inner .l-grid__item--col-2 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-2 {
    width: 16.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-3 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-3 {
    width: 25%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-4 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-4 {
    width: 33.3333333333%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-5 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-5 {
    width: 41.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-6 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-6 {
    width: 50%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-7 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-7 {
    width: 58.3333333333%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-8 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-8 {
    width: 66.6666666667%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-9 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-9 {
    width: 75%;
  }
}
.l-grid .l-grid__inner .l-grid__item--col-10 {
  width: 100%;
}
@media (min-width: 769px) {
  .l-grid .l-grid__inner .l-grid__item--col-10 {
    width: 83.3333333333%;
  }
}

[class*=l-stack] > * {
  margin-top: 0;
  margin-bottom: 0;
}

[class*=l-stack] > * + * {
  margin-top: var(--space-gap-y);
}

.l-stack__ruled > * + * {
  padding-top: var(--space-gap-y);
  border-top: 1px solid var(--color-border);
  border-top: var(--size-border, 1px) var(--style-border, solid) var(--color-border);
}

.l-stack__none > * + * {
  margin-top: 0;
}

.l-stack__minimal > * + * {
  margin-top: 12px;
}

.l-stack__tight > * + * {
  margin-top: 16px;
}

.l-stack__compact > * + * {
  margin-top: 32px;
}

.l-stack__normal > * + * {
  margin-top: 48px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
