form > * + *,
form .form-item + .form-item {
  margin-top: var(--demo-gap-small);
}
@media (min-width: 992px) {
  form > * + *,
  form .form-item + .form-item {
    margin-top: var(--demo-gap-large);
  }
}

label,
legend {
  display: block;
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-16);
  font-weight: var(--demo-font-weight-bold);
  margin-bottom: 0;
}

input,
textarea {
  background-color: var(--demo-color-white);
  border: solid 1px var(--demo-color-dark);
  border-radius: 0;
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-16);
  max-width: 100%;
  padding: 8px 12px;
}

textarea {
  display: block;
  width: 100%;
}

input[type=text],
input[type=password],
input[type=date],
input[type=email],
input[type=number] {
  height: auto;
}

input[type=file] {
  height: inherit;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: var(--demo-color-white);
  border-radius: 0;
  color: var(--demo-color-black);
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-16);
  padding: 8px 12px;
  text-indent: 0.01px;
  text-overflow: "";
}

select::-ms-expand {
  display: none;
}

.form-type__checkbox,
.form-type__radio {
  position: relative;
}
.form-type__checkbox input,
.form-type__radio input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  height: 100%;
  left: 0;
  margin: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: var(--demo-zindex-default);
}
.form-type__checkbox label:before,
.form-type__radio label:before {
  border: var(--demo-color-dark);
  content: "";
  display: block;
  float: left;
  height: 16px;
  margin-right: 12px;
  width: 16px;
}

.form-type__checkbox label:before {
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22var%28--demo-color-white%29%22%3E%3Cpath%20d%3D%22M9%2016.219l10.594-10.641%201.406%201.406-12%2012-5.578-5.578%201.359-1.406z%22%2F%3E%3C%2Fsvg%3E%20") no-repeat center var(--demo-color-white);
  background-size: 80%;
  border: var(--demo-color-dark);
  float: left;
  height: 16px;
  margin-right: 12px;
  width: 16px;
}
.form-type__checkbox input:checked + label:before {
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22var%28--demo-color-white%29%22%3E%3Cpath%20d%3D%22M9%2016.219l10.594-10.641%201.406%201.406-12%2012-5.578-5.578%201.359-1.406z%22%2F%3E%3C%2Fsvg%3E%20") no-repeat center var(--demo-color-dark);
}

.form-type__radio label:before {
  background: var(--demo-color-white);
  border-radius: 50%;
  box-shadow: inset 0 0 0 3px var(--demo-color-white);
}
.form-type__radio input:checked + label:before {
  background: var(--demo-color-dark);
}

.description {
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-14);
}

.password-strength__meter {
  background-color: var(--demo-color-gray-100);
}

.password-strength__indicator.is-fair {
  background-color: var(--demo-color-yellow);
}
.password-strength__indicator.is-strong {
  background-color: var(--demo-color-green);
}
.password-strength__indicator.is-good {
  background-color: var(--demo-color-green);
}
.password-strength__indicator.is-weak {
  background-color: var(--demo-color-red);
}

.password-confirm,
.password-strength__title {
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-14);
}

.password-strength__text {
  font-weight: var(--demo-font-weight-bold);
}

.password-confirm > span {
  font-weight: var(--demo-font-weight-bold);
}
.password-confirm > span.error {
  color: var(--demo-color-red);
}
.password-confirm > span.ok {
  color: var(--demo-color-green);
}

.password-suggestions {
  font-family: var(--demo-font-sans);
  font-size: var(--demo-font-size-14);
  font-weight: var(--demo-font-weight-bold);
}
.password-suggestions > ul {
  font-weight: var(--demo-font-weight-regular);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
